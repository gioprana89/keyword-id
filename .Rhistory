shiny::runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/LITERATURE REVIEW/Aplikasi/myapp')
shiny::runApp()
list.files()
library(readxl)
list.files()
library(readxl)
X <- list.files()
length(X)
data_paper = 0
for(i in 1 :  length(X) - 2 )
{
if(i == 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
print(a)
}
}
data_paper = 0
for(i in 1 :  length(X) - 2 )
{
if(i == 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- a
}
if(i > 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- rbind(data_paper, a)
}
}
print(data_paper)
data_paper = 0
for(i in 1 :  length(X) - 2 )
{
if(i == 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- a
}
if(i > 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- rbind(data_paper, a)
}
}
data_paper[,1] = c(1 :  length(data_paper[,1])   )
data_paper
wb <- openxlsx::createWorkbook()
hs1 <- openxlsx::createStyle(fgFill = "#DCE6F1", halign = "CENTER", textDecoration = "italic",
border = "Bottom")
hs2 <- openxlsx::createStyle(fontColour = "#ffffff", fgFill = "#4F80BD",
halign = "center", valign = "center", textDecoration = "bold",
border = "TopBottomLeftRight")
openxlsx::addWorksheet(wb, "Data Paper", gridLines = TRUE)
openxlsx::writeDataTable(wb, "Data Paper", data_paper, rowNames = FALSE, startRow = 2, startCol = 2, tableStyle = "TableStyleMedium21")
openxlsx::openXL(wb)
list.files()
library(readxl)
X <- list.files()
length(X)
data_paper = 0
for(i in 1 :  length(X) - 2 )
{
if(i == 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- a
}
if(i > 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- rbind(data_paper, a)
}
}
data_paper[,1] = c(1 :  length(data_paper[,1])   )
data_paper
wb <- openxlsx::createWorkbook()
hs1 <- openxlsx::createStyle(fgFill = "#DCE6F1", halign = "CENTER", textDecoration = "italic",
border = "Bottom")
hs2 <- openxlsx::createStyle(fontColour = "#ffffff", fgFill = "#4F80BD",
halign = "center", valign = "center", textDecoration = "bold",
border = "TopBottomLeftRight")
openxlsx::addWorksheet(wb, "Data Paper", gridLines = TRUE)
openxlsx::writeDataTable(wb, "Data Paper", data_paper, rowNames = FALSE, startRow = 2, startCol = 2, tableStyle = "TableStyleMedium21")
openxlsx::openXL(wb)
runApp()
runApp()
runApp()
runApp()
list.files()
library(readxl)
X <- list.files()
length(X)
runApp()
data_paper = 0
for(i in 1 :  length(X) - 2 )
{
if(i == 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- a
}
if(i > 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- rbind(data_paper, a)
}
}
data_paper[,1] = c(1 :  length(data_paper[,1])   )
data_paper
wb <- openxlsx::createWorkbook()
hs1 <- openxlsx::createStyle(fgFill = "#DCE6F1", halign = "CENTER", textDecoration = "italic",
border = "Bottom")
hs2 <- openxlsx::createStyle(fontColour = "#ffffff", fgFill = "#4F80BD",
halign = "center", valign = "center", textDecoration = "bold",
border = "TopBottomLeftRight")
openxlsx::addWorksheet(wb, "Data Paper", gridLines = TRUE)
openxlsx::writeDataTable(wb, "Data Paper", data_paper, rowNames = FALSE, startRow = 2, startCol = 2, tableStyle = "TableStyleMedium21")
openxlsx::openXL(wb)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
print(simpan_keyword)
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
level_simpan_keyword <- as.factor(simpan_keyword)
level_simpan_keyword <- levels(level_simpan_keyword)
length(level_simpan_keyword)
level_simpan_keyword
runApp()
runApp()
runApp()
runApp()
ambil_scope <- data_paper[,"Scope"]
ambil_scope <- as.data.frame(ambil_scope)
simpan_scope <- vector(mode = "character")
for(i in 1 :  length(ambil_scope[,1])  )
{
X <- ambil_scope[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_scope = c(simpan_scope, X)
}
level_simpan_scope <- as.factor(simpan_scope)
level_simpan_scope <- levels(level_simpan_scope)
length(level_simpan_scope)
level_simpan_scope
runApp()
runApp()
setwd("D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny")
shinylive::export(appdir = "myapp", destdir = "docs")
install.packages("S7")
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
library("dplyr")
tabel <- simpan_keyword
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
data_tabel <- data.frame(nama, frekuensi, persentase)
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
simpan_keyword
list.files()
library(readxl)
X <- list.files()
length(X)
data_paper = 0
for(i in 1 :  length(X) - 2 )
{
if(i == 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- a
}
if(i > 1)
{
a <- read_xlsx(X[i])
a <- as.data.frame(a)
data_paper <- rbind(data_paper, a)
}
}
data_paper[,1] = c(1 :  length(data_paper[,1])   )
data_paper
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
level_simpan_keyword <- as.factor(simpan_keyword)
level_simpan_keyword <- levels(level_simpan_keyword)
length(level_simpan_keyword)
level_simpan_keyword
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
simpan_keyword
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
tabel <- table(simpan_keyword)
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
data_tabel <- data.frame(nama, frekuensi, persentase)
data_tabel
ambil_keyword <- data_paper[,"Keyword"]
ambil_keyword <- as.data.frame(ambil_keyword)
simpan_keyword <- vector(mode = "character")
for(i in 1 :  length(ambil_keyword[,1])  )
{
X <- ambil_keyword[i,1]
X <- tolower(X) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
simpan_keyword = c(simpan_keyword, X)
}
tabel <- table(simpan_keyword)
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
data_tabel <- data.frame(nama, frekuensi, persentase)
colnames(data_tabel) <- c("Keywords", "Frequency", "Percentage (%)")
data_tabel
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")

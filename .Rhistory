library(ggplot2)
library(patchwork)
# Combine the plots
q1 + q2 + plot_layout(ncol = 2)
library(ggplot2)
library(patchwork)
# Combine the plots
q1 + q2 + plot_layout(ncol = 1)
library(viridis)
q2 <- ggplot(dat2, aes(x = Year, y = n, fill = Year))+
geom_bar(position="stack", stat="identity") +
facet_grid(Garuda ~ Sinta) + theme_classic() +
theme(strip.background = element_rect(fill="lightblue", size=1, color="darkblue")) + ylab("Frequency") + xlab("Year") +
geom_text(aes(label = n), vjust = 0.4, colour = "#696969", size = 4) + theme(legend.position="none")
q2
library(ggplot2)
library(patchwork)
# Combine the plots
q1 + q2 + plot_layout(ncol = 1)
q2 <- ggplot(dat2, aes(x = Year, y = n))+
geom_bar(stat='identity', fill = "forest green")+
facet_grid(Garuda ~ Sinta) +
geom_text(aes(label = n), vjust = 0.4, colour = "#696969", size = 4) + theme_classic() +
theme(strip.background = element_rect(fill="lightblue", size=1, color="darkblue")) + ylab("Frequency") + xlab("Year")
q2
list.files()
library(readxl)
library(readxl)
dat <- read_xlsx("data_paper.xlsx")
dat <- as.data.frame(dat)
dat
library(readxl)
dat <- read_xlsx("data_paper.xlsx")
dat <- as.data.frame(dat)
dat
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
unlist(strsplit(X ";"))
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
unlist(strsplit(as.character(X), ",", fixed = TRUE))
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
unlist(strsplit(as.character(X), ";", fixed = TRUE))
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- str_replace_all(X, fixed(" "), "")
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
X
cek_keyword = c("law enforcement")
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
cek_keyword %in% X
cek_keyword = c("law enforcements")
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
cek_keyword %in% X
cek_keyword = c("law enforcement")
library(stringr)
data_keyword <- dat[,"Keywords"]
X <- data_keyword[1]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
cek_keyword %in% X
cek_keyword = c("law enforcement")
library(stringr)
simpan_indeks <- vector(mode = "numeric")
k = 0
data_keyword <- dat[,"Keywords"]
for(i in 1 : length(data_keyword))
{
X <- data_keyword[i]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
ada_keyword <- cek_keyword %in% X
if(ada_keyword == TRUE)
{
k = k + 1
simpan_indeks[k] = i
}
}
simpan_indeks
cek_keyword = c("law enforcement")
library(stringr)
simpan_indeks <- vector(mode = "numeric")
simpan_kata <- vector(mode = "character")
k = 0
data_keyword <- dat[,"Keywords"]
for(i in 1 : length(data_keyword))
{
X <- data_keyword[i]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
ada_keyword <- cek_keyword %in% X
if(ada_keyword == TRUE)
{
k = k + 1
simpan_indeks[k] = i
simpan_kata <- c(simpan_kata, X)
}
}
simpan_indeks
simpan_kata
cek_keyword = c("law enforcement")
library(stringr)
simpan_indeks <- vector(mode = "numeric")
simpan_kata <- vector(mode = "character")
k = 0
data_keyword <- dat[,"Keywords"]
for(i in 1 : length(data_keyword))
{
X <- data_keyword[i]
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
ada_keyword <- cek_keyword %in% X
if(ada_keyword == TRUE)
{
k = k + 1
simpan_indeks[k] = i
simpan_kata <- c(simpan_kata, X)
}
}
simpan_indeks
table(simpan_kata)
cek_keyword = c("law enforcement")
library(stringr)
simpan_indeks <- vector(mode = "numeric")
simpan_kata <- vector(mode = "character")
k = 0
data_keyword <- dat[,"Keywords"]
for(i in 1 : length(data_keyword))
{
X <- data_keyword[i]
X <- tolower(X) #mengubah menjadi huruf kecil
cek_keyword <- tolower(cek_keyword) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
ada_keyword <- cek_keyword %in% X
if(ada_keyword == TRUE)
{
k = k + 1
simpan_indeks[k] = i
simpan_kata <- c(simpan_kata, X)
}
}
simpan_indeks
table(simpan_kata)
cek_keyword = c("law enforcement")
library(stringr)
simpan_indeks <- vector(mode = "numeric")
simpan_kata <- vector(mode = "character")
k = 0
data_keyword <- dat[,"Keywords"]
for(i in 1 : length(data_keyword))
{
X <- data_keyword[i]
X <- tolower(X) #mengubah menjadi huruf kecil
cek_keyword <- tolower(cek_keyword) #mengubah menjadi huruf kecil
X <- unlist(strsplit(as.character(X), "  ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), " ;", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";  ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), "; ", fixed = TRUE))
X <- unlist(strsplit(as.character(X), ";", fixed = TRUE))
ada_keyword <- cek_keyword %in% X
if(ada_keyword == TRUE)
{
k = k + 1
simpan_indeks[k] = i
simpan_kata <- c(simpan_kata, X)
}
}
simpan_indeks
tabel <- table(simpan_kata)
nama <- names(tabel)
nama
nama <- names(tabel)
frekuensi <- unlist(tabel)
frekuensi
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
data_tabel <- data.frame(nama, frekuensi, persentase)
colnames(data_tabel) <- c("Keyword", "Frequency", "Percentage (%)")
data_tabel
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
frekuensi
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
frekuensi
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
nama
frekuensi
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
nama
frekuensi
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
nama
frekuensi
persentase
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
nama
frekuensi
persentase
data.frame(nama, frekuensi, persentase)
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
nama
frekuensi
persentase
data.frame(nama, frekuensi, persentase)
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
data_tabel <- data.frame(nama, frekuensi, persentase)
data_tabel
# load the package
library("dplyr")
# create dataframe with roll no, names
# and subjects columns
data = data.frame(rollno = c(1, 5, 4, 2, 3),
names = c("sravan", "bobby", "pinkey",
"rohith", "gnanesh"),
subjects = c("java", "python", "php",
"sql", "c"))
# sort the data  based on subjects
print(arrange(data, subjects))
library("dplyr")
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
data_tabel <- data.frame(nama, frekuensi, persentase)
data_tabel <- arrange(data_tabel, frekuensi)
data_tabel
library("dplyr")
nama <- names(tabel)
frekuensi <- unlist(tabel)
names(frekuensi) <- NULL
frekuensi <- unlist(frekuensi)
frekuensi <- as.numeric(frekuensi)
persentase <- frekuensi / sum(frekuensi) * 100
persentase <- round(persentase, digits = 2)
nama <- unlist(nama)
data_tabel <- data.frame(nama, frekuensi, persentase)
data_tabel <- arrange(data_tabel, desc(frekuensi) )
data_tabel
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point()
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip()
urutan <- data_tabel[, "nama"]
urutan
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip()
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- as.factor(data_tabel[,1], levels(urutan) )
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- factor(data_tabel[,1], levels = c(urutan) )
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip()
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- factor(data_tabel[,1], levels = c(urutan) )
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip() + xlab("Frequency")
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- factor(data_tabel[,1], levels = c(urutan) )
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip() + xlab("Keywords")
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- factor(data_tabel[,1], levels = c(urutan) )
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip() + xlab("Keywords") + ylab("Frequency")
library("ggthemes")
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- factor(data_tabel[,1], levels = c(urutan) )
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip() + xlab("Keywords") + ylab("Frequency")
library("ggthemes")
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- factor(data_tabel[,1], levels = c(urutan) )
library(ggplot2)
# Basic line plot with points
ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip() + xlab("Keywords") + ylab("Frequency") + theme_base()
library("ggthemes")
urutan <- data_tabel[, "nama"]
data_tabel[,1] <- factor(data_tabel[,1], levels = c(urutan) )
library(ggplot2)
# Basic line plot with points
p <- ggplot(data = data_tabel, aes(x = nama, y = frekuensi, group = 1)) +
geom_line( ) +  geom_point() + coord_flip() + xlab("Keywords") + ylab("Frequency") + theme_base()
p
p + theme_hc() + ggtitle("theme_hc()")
p + theme_hc() + ggtitle("Frequency Distribution Based on Keywords")
p + theme_hc() + ggtitle("Frequency Distribution of Keywords")
p + theme_hc() + ggtitle("Frequency Distribution of Keywords") + geom_line(color="red")
kalimat <- paste0("Frequency Distribution of Keywords: ", cek_keyword)
p + theme_hc() + ggtitle(kalimat) + geom_line(color="red")
kalimat <- paste0("Keyword Finder of ", cek_keyword)
p + theme_hc() + ggtitle(kalimat) + geom_line(color="red")
kalimat <- paste0("Keyword Finder of ", cek_keyword)
p + theme_minimal() + ggtitle(kalimat) + geom_line(color="red")
shiny::runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
runApp('D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny/myapp')
setwd("D:/PROJECT PAPER UGI 2025/PROJECT WEB AI PENELUSURAN PAPER BERDASARKAN KEYWORD/shiny/shiny")
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
